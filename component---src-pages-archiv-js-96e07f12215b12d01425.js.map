{"version":3,"sources":["webpack:///./src/components/newsletterSummary.js","webpack:///./src/pages/archiv.js"],"names":["NewsletterSummary","node","className","data","title","keywords","size","renderAs","style","padding","allNewJson","edges","map","index","to","slug","query"],"mappings":"kQAeeA,EAVW,SAAAC,GACxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,UAAW,WAClB,kBAAC,IAAD,CAAiBD,KAAMA,EAAKA,U,qBCTpC,sCAUe,sBAAe,IAAZE,EAAW,EAAXA,KAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SAASC,SAAU,CAAC,cAAD,yBAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAASC,KAAM,EAAGC,SAAS,KAAKC,MAAO,CAACC,QAAS,SAAjD,UAGCN,EAAKO,WAAWC,MAAMC,KAAI,WAAWC,GAAX,IAAGZ,EAAH,EAAGA,KAAH,OACzB,kBAAC,IAAD,CAAMa,GAAIb,EAAKc,MACb,kBAAC,EAAD,CAAmBd,KAAMA,WAZtB,IAoBFe,EAAK","file":"component---src-pages-archiv-js-96e07f12215b12d01425.js","sourcesContent":["import React from \"react\"\nimport Box from \"react-bulma-components/lib/components/box\"\nimport Content from \"react-bulma-components/lib/components/content\"\nimport NewsletterTitle from \"./newsletterTitle\"\n\nconst NewsletterSummary = node => {\n  return (\n    <Box>\n      <Content className={\"summary\"}>\n        <NewsletterTitle node={node.node} />\n      </Content>\n    </Box>\n  )\n}\n\nexport default NewsletterSummary\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport Navbar from \"../components/navbar\";\nimport NewsletterSubscribe from \"../components/newsletterSubscribe\";\nimport Heading from \"react-bulma-components/lib/components/heading\";\nimport NewsletterSummary from \"../components/newsletterSummary\"\nimport Container from \"react-bulma-components/lib/components/container\";\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Archiv\" keywords={[`ecotainment`, `newsletter`, `archiv`]} />\n      <Container>\n        <Navbar/>\n        <NewsletterSubscribe />\n        <Heading size={3} renderAs=\"h2\" style={{padding: '25px'}}>\n          Archiv\n        </Heading>\n        {data.allNewJson.edges.map(({ node }, index) => (\n          <Link to={node.slug}>\n            <NewsletterSummary node={node} />\n          </Link>\n        ))}\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n    query {\n        allNewJson(sort: { fields: published, order: DESC }) {\n            edges {\n                node {\n                    published\n                    title\n                    slug\n                    tags\n                    newsletter {\n                        welcome\n                        intro\n                        parts {\n                            emoji {\n                                label\n                                icon\n                            }\n                            title\n                            tags\n                            text\n                        }\n                        outro\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}